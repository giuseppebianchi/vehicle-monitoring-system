[{"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/App.tsx":"1","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/components/header/Header.tsx":"2","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/components/uikit/uikit.tsx":"3","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/reportWebVitals.ts":"4","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/index.tsx":"5","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/VehicleMarkers.tsx":"6","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/FleetMap.tsx":"7","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/MapControlsBanner.tsx":"8","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/MapView.tsx":"9","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/VehiclesView.tsx":"10","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/UserPositionMarker.tsx":"11","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/assets/js/SmoothWheelZoom.js":"12","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/GTFSView.tsx":"13","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/context/vehiclesContext.tsx":"14","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/context/userPositionContext.tsx":"15","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/VehiclesList.tsx":"16"},{"size":1492,"mtime":1610620827156,"results":"17","hashOfConfig":"18"},{"size":604,"mtime":1610487973630,"results":"19","hashOfConfig":"18"},{"size":33877,"mtime":1610841983796,"results":"20","hashOfConfig":"18"},{"size":425,"mtime":1609862454592,"results":"21","hashOfConfig":"18"},{"size":500,"mtime":1609862454591,"results":"22","hashOfConfig":"18"},{"size":6945,"mtime":1610662841146,"results":"23","hashOfConfig":"18"},{"size":761,"mtime":1610619593769,"results":"24","hashOfConfig":"18"},{"size":4785,"mtime":1610891850072,"results":"25","hashOfConfig":"18"},{"size":2494,"mtime":1610648779386,"results":"26","hashOfConfig":"18"},{"size":8846,"mtime":1610977604165,"results":"27","hashOfConfig":"18"},{"size":1818,"mtime":1610213307774,"results":"28","hashOfConfig":"18"},{"size":3627,"mtime":1610477125632,"results":"29","hashOfConfig":"18"},{"size":1666,"mtime":1610833915901,"results":"30","hashOfConfig":"18"},{"size":1596,"mtime":1610969014800,"results":"31","hashOfConfig":"18"},{"size":754,"mtime":1610125633456,"results":"32","hashOfConfig":"18"},{"size":4105,"mtime":1610855353964,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15mosek",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/App.tsx",["75","76"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/components/header/Header.tsx",["77","78","79"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/components/uikit/uikit.tsx",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100"],"import React, {useState} from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport './tailwind.css';\nimport defaultImage from '../../assets/images/default.jpg'\nimport {LatLngTuple} from \"leaflet\";\nimport Moment from \"react-moment\";\n\nconst getStyledIcon = (icon: JSX.Element, classname: string) => {\n    return (\n        <span className={classname}>\n            {icon}\n        </span>\n    )\n}\n\n\nexport interface MenuItems {\n    icon?: JSX.Element;\n    name: string;\n    link: string;\n    dropdown?: {\n        name: string;\n        link: string;\n    }[];\n    action?: (a: any) => void;\n}\n\ninterface NavbarButton {\n    name: string;\n    action?: string;\n    class?: string;\n}\n\ninterface NavbarProps {\n    menu?: MenuItems[];\n    logo?: any;\n    classname?: string;\n    style?: {\n        [key: string]: string | number;\n    }\n    buttons?: NavbarButton[];\n    onClickNavItem?: (a: any) => void;\n}\nconst NavItem: React.FC<MenuItems> = ({name, link, dropdown, action}) => {\n    const [active, setActive] = useState(false)\n    const checkActive = (match?: any, location?: any) => {\n        if (!match) {\n            setActive(false)\n            return false;\n        }else {\n            setActive(true)\n            action && action(name)\n            return true\n        }\n    }\n    return (\n        <>\n            {dropdown\n                ? <div className=\"relative\">\n                    <button type=\"button\"\n                            className=\"group bg-white rounded-md text-gray-500 inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n                        <span>Solutions</span>\n                        <svg className=\"ml-2 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\n                             xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n                             aria-hidden=\"true\">\n                            <path fillRule=\"evenodd\"\n                                  d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                  clipRule=\"evenodd\"/>\n                        </svg>\n                    </button>\n                    <div className=\"hidden absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                        <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                            <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                                <a href=\"#\" className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                                    <svg className=\"flex-shrink-0 h-6 w-6 text-blue-600\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                         stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"/>\n                                    </svg>\n                                    <div className=\"ml-4\">\n                                        <p className=\"text-base font-medium text-gray-900\">\n                                            Analytics\n                                        </p>\n                                        <p className=\"mt-1 text-sm text-gray-500\">\n                                            Get a better understanding of where your traffic is coming from.\n                                        </p>\n                                    </div>\n                                </a>\n\n                                <a href=\"#\" className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                                    <svg className=\"flex-shrink-0 h-6 w-6 text-blue-600\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                         stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"/>\n                                    </svg>\n                                    <div className=\"ml-4\">\n                                        <p className=\"text-base font-medium text-gray-900\">\n                                            Engagement\n                                        </p>\n                                        <p className=\"mt-1 text-sm text-gray-500\">\n                                            Speak directly to your customers in a more meaningful way.\n                                        </p>\n                                    </div>\n                                </a>\n\n                                <a href=\"#\" className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                                    <svg className=\"flex-shrink-0 h-6 w-6 text-blue-600\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                         stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"/>\n                                    </svg>\n                                    <div className=\"ml-4\">\n                                        <p className=\"text-base font-medium text-gray-900\">\n                                            Security\n                                        </p>\n                                        <p className=\"mt-1 text-sm text-gray-500\">\n                                            Your customers&#039; data will be safe and secure.\n                                        </p>\n                                    </div>\n                                </a>\n\n                                <a href=\"#\" className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                                    <svg className=\"flex-shrink-0 h-6 w-6 text-blue-600\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                         stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"/>\n                                    </svg>\n                                    <div className=\"ml-4\">\n                                        <p className=\"text-base font-medium text-gray-900\">\n                                            Integrations\n                                        </p>\n                                        <p className=\"mt-1 text-sm text-gray-500\">\n                                            Connect with third-party tools that you&#039;re already using.\n                                        </p>\n                                    </div>\n                                </a>\n\n                                <a href=\"#\" className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                                    <svg className=\"flex-shrink-0 h-6 w-6 text-blue-600\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                         stroke=\"currentColor\" aria-hidden=\"true\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"/>\n                                    </svg>\n                                    <div className=\"ml-4\">\n                                        <p className=\"text-base font-medium text-gray-900\">\n                                            Automations\n                                        </p>\n                                        <p className=\"mt-1 text-sm text-gray-500\">\n                                            Build strategic funnels that will drive your customers to convert\n                                        </p>\n                                    </div>\n                                </a>\n                            </div>\n                            <div className=\"px-5 py-5 bg-gray-50 space-y-6 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8\">\n                                <div className=\"flow-root\">\n                                    <a href=\"#\"\n                                       className=\"-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100\">\n                                        <svg className=\"flex-shrink-0 h-6 w-6 text-gray-400\"\n                                             xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                             stroke=\"currentColor\" aria-hidden=\"true\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                  strokeWidth=\"2\"\n                                                  d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"/>\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                  strokeWidth=\"2\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                                        </svg>\n                                        <span className=\"ml-3\">Watch Demo</span>\n                                    </a>\n                                </div>\n                                <div className=\"flow-root\">\n                                    <a href=\"#\"\n                                       className=\"-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100\">\n                                        <svg className=\"flex-shrink-0 h-6 w-6 text-gray-400\"\n                                             xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                             stroke=\"currentColor\" aria-hidden=\"true\">\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                                  strokeWidth=\"2\"\n                                                  d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"/>\n                                        </svg>\n                                        <span className=\"ml-3\">Contact Sales</span>\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                : <NavLink to={link}\n                           className={classNames(\"font-medium cursor-pointer px-3 py-2 dark:text-white rounded-md transition-all duration-150\",\n                               {\"active bg-blue-100 text-blue-500\": active}, {\"text-gray-500 hover:bg-gray-100\": !active})}\n                           isActive={checkActive}>\n                    {name}\n                </NavLink>}\n        </>\n    )\n\n}\n\nconst NavbarMobile: React.FC<NavbarProps> = ({menu, style}) => {\n    return (\n        <div id=\"menu-mobile\" className=\"hidden absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\" style={style}>\n            <div\n                className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n                <div className=\"pt-5 pb-6 px-5\">\n                    <div className=\"flex items-center justify-between\">\n                        <div>\n                            <img className=\"h-8 w-auto\"\n                                 src=\"https://tailwindui.com/img/logos/workflow-mark-blue-600.svg\" alt=\"Workflow\" />\n                        </div>\n                        <div className=\"-mr-2\">\n                            <button type=\"button\"\n                                    className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500\">\n                                <span className=\"sr-only\">Close menu</span>\n                                <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                     viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                          d=\"M6 18L18 6M6 6l12 12\"/>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"mt-6\">\n                        <nav className=\"grid gap-y-8\">\n                            {menu && menu.map(({name, link, icon}) => {\n                                return (\n                                    <Link key={name} to={link} className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\">\n                                        {icon && getStyledIcon(icon, \"flex-shrink-0 h-6 w-6 text-blue-600\")}\n                                        <span className=\"ml-3 text-base font-medium text-gray-900\">{name}</span>\n                                    </Link>\n                                )\n                            })}\n\n                        </nav>\n                    </div>\n                </div>\n                <div className=\"py-6 px-5 space-y-6\">\n                    <div>\n                        <a href=\"#\" className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-blue-600 hover:bg-blue-700\">\n                            Sign up\n                        </a>\n                        <p className=\"mt-6 text-center text-base font-medium text-gray-500\">\n                            Existing customer?\n                            <a href=\"#\" className=\"text-blue-600 hover:text-blue-500\">\n                                Sign in\n                            </a>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport const Navbar: React.FC<NavbarProps> = ({menu, logo, style, classname, onClickNavItem}) => {\n    return (\n        <div className={classname ? classname : \"relative bg-white\"} style={style}>\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n                <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n                    <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                        <a href=\"#\">\n                            <span className=\"sr-only\">Workflow</span>\n                            <img className=\"h-8 w-auto sm:h-10\"\n                                 src={logo ? logo : \"https://tailwindui.com/img/logos/workflow-mark-blue-600.svg\"} alt=\"\" />\n                        </a>\n                    </div>\n                    <div className=\"-mr-2 -my-2 md:hidden\">\n                        <button type=\"button\"\n                                className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500\">\n                            <span className=\"sr-only\">Open menu</span>\n                            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                 stroke=\"currentColor\" aria-hidden=\"true\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                      d=\"M4 6h16M4 12h16M4 18h16\"/>\n                            </svg>\n                        </button>\n                    </div>\n                    <nav className=\"hidden md:flex space-x-10\">\n                        {menu && menu.map(({name, link, dropdown}) => {\n                            return (\n                                <NavItem name={name} link={link} key={name} dropdown={dropdown} action={onClickNavItem}/>\n                            )\n                        })}\n                    </nav>\n                    <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                        <a href=\"#\"\n                           className=\"whitespace-nowrap text-base font-medium text-gray-500 p-2 px-4 rounded-md hover:text-gray-900 hover:bg-gray-100 transition-all duration-150\">\n                            Reconnect\n                        </a>\n                        <a href=\"#\"\n                           className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-blue-600 hover:bg-blue-700\">\n                            Settings\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <NavbarMobile menu={menu}/>\n        </div>\n    )\n}\n\ninterface SidebarProps {\n    info: any;\n    items?: {\n        name: string;\n        link: string;\n        data_url: string;\n        icon?: JSX.Element;\n    }[];\n    style?: {\n        [key: string]: string | number;\n    };\n    classname?: string;\n    collapsible?: boolean;\n    active: string;\n    onClickItem: (v: string) => void;\n}\n\nexport const Sidebar: React.FC<SidebarProps> = ({items, style, classname, info, collapsible, active, onClickItem, children}) => {\n    const [collapsed, setCollapsed] = useState(false)\n    const default_classname =  \"relative h-screen inline-flex flex-col justify-between items-center bg-white shadow p-6\"\n    const item_classname = \"hover:bg-gray-100\";\n    const item_classname_active = \"bg-blue-100 text-blue-500\"\n    const collapsedSidebarHandler = () => {\n        setCollapsed(!collapsed)\n    }\n    return (\n        <aside className={`${classname ? classname : default_classname} ${collapsed ? \"collapsed-sidebar\" : \"\"}`} style={style}>\n            <nav className=\" inline-flex flex-col space-y-2 w-full\">\n                {items ? items.map(({name, icon}) => {\n                    return (\n                        <span  key={name} className={classNames(\n                            \"b-list-item flex items-center text-gray-500 py-2 cursor-pointer dark:text-white pl-2 pr-6 rounded-lg transition-all duration-150\",\n                                    { [item_classname_active]: active === name },\n                                    { [item_classname]: active !== name },\n                            )} onClick={() => onClickItem(name)}>\n                            <span className=\"w-8 p-1 mr-4 text-blue-500 text-xl\">\n                                {icon}\n                            </span>\n                            <span className=\"sidebar-label font-medium select-none\">{name}</span>\n                        </span>\n                    )\n                }) : children}\n            </nav>\n            {info && <div className=\"sidebar-infobox b-list-item flex items-center w-full bg-gray-100 p-4 bottom-2 rounded-lg transition-all duration-150 hover:scale-110 sm:bg-transparent sm:p-0\">\n                <img\n                src={info.img ? info.img : defaultImage}\n                alt=\"John Doe\" className=\"w-10 h-10 object-cover rounded-full mr-4 border border-solid border-white\" />\n                <div>\n                    <h3 className=\"sidebar-label text-gray-900 font-semibold\">{info.top}</h3>\n                    <h4 className=\"sidebar-label text-sm text-gray-700 mt-1\">{info.bottom}</h4>\n                </div>\n            </div>}\n            {collapsible && <span id=\"close-sidebar\" onClick={collapsedSidebarHandler} /> }\n        </aside>\n    )\n}\n\ninterface BannerProps {\n    classname?: string;\n    style?: {\n        [key: string]: string | number;\n    };\n    onClickClose?: () => void;\n}\n\nexport const Banner: React.FC<BannerProps> = ({classname, style, children, onClickClose}) => {\n    return (\n        <div className={classname ? classname : \"bg-blue-600 rounded-md\"} style={style}>\n            <div className=\"max-w-7xl mx-auto py-3 px-3 sm:px-6 lg:px-8\">\n                <div className=\"flex items-center justify-between\">\n                    {children}\n                    <div className=\"order-2 flex-shrink-0 sm:order-3 sm:ml-3\">\n                        <button type=\"button\" onClick={onClickClose}\n                                className=\"-mr-1 flex p-2 rounded-md hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-white sm:-mr-2 transition-all duration-150\">\n                            <span className=\"sr-only\">Dismiss</span>\n                            <svg className=\"h-6 w-6 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                 viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                      d=\"M6 18L18 6M6 6l12 12\"/>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\ninterface DetailCardProps {\n    title: string;\n    subtitle: string;\n    img?: string;\n    classname?: string;\n    style?: React.StyleHTMLAttributes<any>;\n    selected?: boolean;\n    thumbnail?: string;\n}\n\nexport const DetailCard: React.FC<DetailCardProps> = ({title, subtitle, img, selected, classname, style, children, thumbnail}) => {\n    return (\n        <article className=\"detail-card flex flex-col text-gray w-full h-auto mb-5 relative\">\n            <header className=\"header flex items-center mt-4 order-3\">\n                <a href=\"#\" className=\"mr-3\">\n                    <img\n                        src={img ? img : defaultImage}\n                        alt=\"Profile image for Ivor Padilla\" className=\"authorAvatar w-14 h-auto bg-black overflow-hidden rounded-lg\"\n                    />\n                </a>\n                <div className=\"titleAndAuthor w-11/12 truncate\">\n                    <h3 className=\"font-medium text-gray-300\">UnitSN: <span className=\"font-bold text-white\">{title}</span></h3>\n                    <h3 className=\"font-medium text-gray-300\">UnitID: <span className=\"font-bold text-white\">{subtitle}</span></h3>\n                </div>\n                <div className=\"action-menu mr-1 flex relative rounded-md w-fit\">\n                    <button className=\"button MenuAction_button-1K2jT invisible-button ItemActions_button-1IG6J\"\n                            title=\"Actions\" data-test-id=\"action-menu\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <svg width=\"20\" height=\"20\" className=\"icon icon-ellipse\" fill=\"#747A95\">\n                            <use xlinkHref=\"/svgs/compiled/svgs.40016ff2.svg#ellipse\"></use>\n                        </svg>\n                    </button>\n                </div>\n            </header>\n            <div className=\"thumbnail-wrap relative h-0 rounded-md pt-40 overflow-hidden bg-white bg-opacity-75 bg-cover bg-gradient\">\n                {thumbnail && <><img className=\"grid-preview-image absolute object-cover w-full h-full top-0 left-0\" loading=\"lazy\"\n                                     alt=\"\"\n                                     src=\"https://lh3.googleusercontent.com/proxy/JZ5LHdRREts9BwrZTPbzQk1b9pM1PhRWUS7TaMhU--w9q8FyQwzF08EFpUrRlAUBoojqs77SoyJS_qEOJAwzGkr8C5eigo5LMGBc8IbKpqesIsUUVvp_dNIwGkojXGZf1vPu_19Zw-lRZ2eEWc9gkdc\" />\n                    <a className=\"cover-link absolute inset-0 border-0\"\n                       href=\"https://codepen.io/ivorpad/pen/REMaLr\"></a></>}\n            </div>\n            <footer className=\"stats absolute -bottom-12 left-1 pl-1 h-10 flex items-center text-sm overflow-hidden\">\n                <button\n                    className=\"single-stat relative transition-all opacity-0 duration-200 relative mr-1 rounded-sm py-1 px-2 text-white border-0 delay-100 transform -translate-y-1/2\">\n                    <svg width=\"16\" height=\"16\" className=\"icon icon-heart inline-block relative mr-1\">\\\n                        <use xlinkHref=\"/svgs/compiled/svgs.40016ff2.svg#heart\"></use>\n                    </svg>\n                    <span className=\"count\">1</span>\n                </button>\n            </footer>\n        </article>\n    )\n}\ninterface CardProps {\n    title: string;\n    subtitle: string;\n    img?: string;\n    classname?: string;\n    style?: React.StyleHTMLAttributes<any>;\n    selected?: boolean;\n    thumbnail?: string;\n    content?: any;\n    action: (point: LatLngTuple) => void;\n}\n//height is valiable and can contain a header, footer and body\nexport const ContentCard: React.FC<CardProps> = ({title, subtitle, img, content, selected, action, classname, style, children, thumbnail}) => {\n    const isRealtime = content.isRealtime || false;\n    return (\n        <article className=\"b-card relative text-gray w-full h-auto mb-6 shadow-lg font-medium\">\n            <div className=\"thumbnail-wrap absolute inset-0 rounded-lg overflow-hidden bg-white bg-opacity-80 bg-cover bg-blurred\">\n                {thumbnail && <><img className=\"grid-preview-image absolute object-cover w-full h-full top-0 left-0\" loading=\"lazy\"\n                     alt=\"\"\n                     src=\"https://lh3.googleusercontent.com/proxy/JZ5LHdRREts9BwrZTPbzQk1b9pM1PhRWUS7TaMhU--w9q8FyQwzF08EFpUrRlAUBoojqs77SoyJS_qEOJAwzGkr8C5eigo5LMGBc8IbKpqesIsUUVvp_dNIwGkojXGZf1vPu_19Zw-lRZ2eEWc9gkdc\" />\n                    <a className=\"cover-link absolute inset-0 border-0\"\n                       href=\"#\"></a></>}\n            </div>\n            <div className=\"b-card-content relative\">\n                <header className=\"header top-0 flex items-center p-4\">\n                    <a href=\"/giuseppebianchi\" className=\"mr-3\">\n                        <img\n                            src={img ? img : defaultImage}\n                            alt=\"Profile image for Ivor Padilla\" className=\"authorAvatar w-14 h-auto bg-black overflow-hidden rounded-md\"\n                        />\n                    </a>\n                    <div className=\"titleAndAuthor w-11/12 truncate\">\n                        <h3 className=\"font-medium text-blue-500 text-sm\">UnitSN: <span className=\"font-extrabold text-gray-600 text-lg\">{title}</span></h3>\n                        <h3 className=\"font-medium text-blue-500 text-sm\">UnitID: <span className=\"font-bold text-gray-400\">{subtitle}</span></h3>\n                    </div>\n                    <div className=\"action-menu mr-1 flex relative rounded-md w-fit\">\n                        <button className=\"button MenuAction_button-1K2jT invisible-button ItemActions_button-1IG6J\"\n                                title=\"Actions\" data-test-id=\"action-menu\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <svg width=\"20\" height=\"20\" className=\"icon icon-ellipse\" fill=\"#747A95\">\n                                <use xlinkHref=\"/svgs/compiled/svgs.40016ff2.svg#ellipse\"></use>\n                            </svg>\n                        </button>\n                    </div>\n                </header>\n                <div className=\"b-card-body flex flex-col px-4 pb-8\">\n                    <h3 className=\"font-medium text-blue-300 text-sm\">Driver ID: <span className=\"font-bold text-gray-500\">{content.driverID}</span></h3>\n                    {content.driverID_lastupdate && <h3 className=\"text-blue-300 text-sm\">badged: <span className=\"font-medium text-gray-400 text-sm\"><Moment format=\"llll\">{content.driverID_lastupdate}</Moment></span></h3>}\n                </div>\n                <footer className=\"footer absolute flex items-center px-4 -bottom-3\" /* bottom-0 p-6 */>\n                    <div className=\"list-buttons flex items-center flex-row space-x-4\">\n                        <span className={classNames(\"rounded-md text-white items-center justify-center px-4 py-1 text-sm transition-all duration-500\", {\"bg-realtime\": isRealtime}, {\"bg-offline\": !isRealtime})} >{isRealtime ? \"Real Time\" : \"Offline\"}</span>\n                        <span onClick={() => action([content.latitude, content.longitude])}\n                            className=\"sm:w-auto leading-none text-gray-300 rounded-md bg-white cursor-pointer shadow-sm py-1 px-4 border border-transparent transform transition-all duration-150 hover:shadow-lg hover:-translate-y-0.5  hover:text-blue-300\">Locate</span>\n                    </div>\n                </footer>\n            </div>\n        </article>\n    )\n}\n//height is fixed, based on thumbnail, and can contain a bannar on top or bottom\nexport const Card: React.FC<CardProps> = ({title, subtitle, img, selected, classname, style, children, thumbnail}) => {\n    return (\n        <article className=\"b-card relative flex flex-col text-gray w-full h-auto mb-5 shadow-lg font-medium\">\n            <div className=\"thumbnail-wrap relative h-0 rounded-lg pt-40 overflow-hidden bg-white bg-opacity-80 bg-cover bg-blurred\">\n                {thumbnail && <><img className=\"grid-preview-image absolute object-cover w-full h-full top-0 left-0\" loading=\"lazy\"\n                                     alt=\"\"\n                                     src=\"https://lh3.googleusercontent.com/proxy/JZ5LHdRREts9BwrZTPbzQk1b9pM1PhRWUS7TaMhU--w9q8FyQwzF08EFpUrRlAUBoojqs77SoyJS_qEOJAwzGkr8C5eigo5LMGBc8IbKpqesIsUUVvp_dNIwGkojXGZf1vPu_19Zw-lRZ2eEWc9gkdc\" />\n                    <a className=\"cover-link absolute inset-0 border-0\"\n                       href=\"#\"></a></>}\n            </div>\n            <header className=\"header absolute top-0 flex items-center p-4 pb-6\">\n                <a href=\"/giuseppebianchi\" className=\"mr-3\">\n                    <img\n                        src={img ? img : defaultImage}\n                        alt=\"Profile image for Ivor Padilla\" className=\"authorAvatar w-14 h-auto bg-black overflow-hidden rounded-md\"\n                    />\n                </a>\n                <div className=\"titleAndAuthor w-11/12 truncate\">\n                    <h3 className=\"font-medium text-blue-300 text-sm\">UnitSN: <span className=\"font-bold text-gray-500\">{title}</span></h3>\n                    <h3 className=\"font-medium text-blue-300 text-sm\">UnitID: <span className=\"font-bold text-gray-500\">{subtitle}</span></h3>\n                </div>\n                <div className=\"action-menu mr-1 flex relative rounded-md w-fit\">\n                    <button className=\"button MenuAction_button-1K2jT invisible-button ItemActions_button-1IG6J\"\n                            title=\"Actions\" data-test-id=\"action-menu\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <svg width=\"20\" height=\"20\" className=\"icon icon-ellipse\" fill=\"#747A95\">\n                            <use xlinkHref=\"/svgs/compiled/svgs.40016ff2.svg#ellipse\"></use>\n                        </svg>\n                    </button>\n                </div>\n            </header>\n            <footer className=\"header absolute flex items-center px-4 -bottom-3\" /* bottom-0 p-6 */>\n                <div className=\"list-buttons flex items-center flex-row space-x-4\">\n                    <span className=\"rounded-md bg-blue-500 text-white items-center justify-center px-4 py-1 text-sm\">Title</span>\n                    <span className=\"sm:w-auto leading-none text-gray-300 rounded-md bg-white cursor-pointer shadow-sm py-1 px-4 border border-transparent transform transition-all duration-150 hover:shadow-lg hover:-translate-y-0.5  hover:text-blue-300\">Title</span>\n                </div>\n            </footer>\n        </article>\n    )\n}\nexport const EmptyCard: React.FC = ({children}) => {\n    return (\n        <article className=\"b-card relative flex flex-col text-gray w-full h-auto mb-5 shadow-lg font-medium\">\n            <div\n                className=\"thumbnail-wrap relative h-0 rounded-lg pt-40 overflow-hidden bg-white bg-opacity-80 bg-cover bg-blurred\"></div>\n            <header className=\"animate-pulse header w-full absolute top-0 flex items-center p-4 pb-6\">\n                <div className=\"rounded-full w-10 h-8 bg-gray-300\"></div>\n                <div className=\"titleAndAuthor w-full p-3 truncate\">\n                    <div className=\"h-3 w-full bg-gray-200 rounded-full my-3\"></div>\n                    <div className=\"h-3 w-full bg-gray-200 rounded-full  my-3\"></div>\n                </div>\n            </header>\n        </article>\n    )\n}\n",["101","102"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/reportWebVitals.ts",[],["103","104"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/index.tsx",[],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/VehicleMarkers.tsx",["105"],"import React, {useContext, useEffect} from 'react';\nimport {Marker, Popup, Tooltip, useMapEvents} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport Moment from \"react-moment\";\n\nimport iconBus from '../../../assets/images/bus-icon.svg';\nimport bus_image from '../../../assets/images/gps.svg';\nimport {VehiclesContext} from \"../context/vehiclesContext\";\nimport classNames from \"classnames\";\n\n//Vehicle Icon\nlet vehicleIconImg = L.icon({\n    iconUrl: iconBus,\n    iconSize:     [40, 40], // size of the icon\n    iconAnchor:   [18, 38], // point of the icon which will correspond to marker's location\n    popupAnchor:  [2, -40], // point from which the popup should open relative to the iconAnchor\n});\nvar vehicleIcon = L.divIcon({\n    iconSize:     [40, 40], // size of the icon\n    iconAnchor:   [18, 38], // point of the icon which will correspond to marker's location\n    popupAnchor:  [2, -40], // point from which the popup should open relative to the iconAnchor\n    className: 'realtime-bus-marker bg-label',\n    html: `<div class=\"realtime-bus-bg\"></div><img class=\"realtime-bus-icon\" src=${iconBus}>`\n});\nvar vehicleIconOffline = L.divIcon({\n    iconSize:     [40, 40], // size of the icon\n    iconAnchor:   [18, 38], // point of the icon which will correspond to marker's location\n    popupAnchor:  [2, -40], // point from which the popup should open relative to the iconAnchor\n    className: 'realtime-bus-marker bg-label not-updated',\n    html: `<div class=\"realtime-bus-bg\"></div><img class=\"realtime-bus-icon\" src=${iconBus}>`\n});\n\ninterface GPSData {\n    \"_id\": string,\n    \"unitID\": string,\n    \"unitSN\": string,\n    \"datetime\": string,\n    \"datetime_system\": Date,\n    \"latitude\": number,\n    \"longitude\": number,\n    driverID: string,\n    \"driverID_lastupdate\": Date,\n    \"speed\": number\n}\n\nconst VehicleMarkers: React.FC = () => {\n    const {\n        vehicles,\n        permanentLabels,\n        isVehicleRealTime,\n        REALTIME_RANGE,\n        realtimeVehiclesPosition\n    } = useContext(VehiclesContext)\n\n    //useMapHook\n    const map = useMapEvents({\n        dblclick: (e) => {\n            //addMarker(e.latlng)\n        },\n        zoomstart: (e) => {\n            //console.log(\"start\")\n            map.getPanes().mapPane.classList.add(\"prevent-animation\")\n        },\n        zoomend: (e) => {\n            //console.log(\"end\")\n            map.getPanes().mapPane.classList.remove(\"prevent-animation\")\n        }\n        //alternative to useMapEvents\n        /*useEffect(() => {\n            console.log(\"renderer\")\n            //map here is passed as prop\n            map.on(\"dblclick\", (e: LeafletMouseEvent) => {\n                addMarker(e.latlng)\n            })\n        }, [map])*/\n    })\n\n    useEffect(() => {\n        //refresh tooltip\n        //reset markers animations\n        map.getPanes().mapPane.classList.remove(\"prevent-animation\")\n    }, [permanentLabels, realtimeVehiclesPosition])\n\n    const realtime_min_time = new Date(Date.now() - 1000 * REALTIME_RANGE) // 30 secs\n\n    return (\n        <>\n            {vehicles.map((v: GPSData) => {\n                // @ts-ignore\n                // @ts-ignore\n                return (\n                    <Marker key={v.unitID + `_tooltip${permanentLabels}`}\n                            position={[v.latitude, v.longitude]}\n                            icon={realtimeVehiclesPosition ? (isVehicleRealTime(v.datetime_system, realtime_min_time) ? vehicleIcon : vehicleIconOffline) : vehicleIconImg}\n                            riseOnHover={true}\n                    >\n                        <Popup className=\"realtime-bus-marker-popup bg-white bg-opacity-75 w-screen sm:w-96\" maxWidth={500} /* autoPanPadding={[200, 50]} disable on mobile */>\n                            <div className=\"flex items-center flex-col w-full p-4 rounded-lg transition-opacity duration-250 text-sm\">\n                                <div className=\"flex items-center\">\n                                    <img src={bus_image} alt=\"Bus\"\n                                     className=\"w-10 h-10 object-cover mr-4\" />\n                                    <div>\n                                        <h3 className=\"font-medium text-blue-600\">UnitSN: <span className=\"font-bold text-black\">{v.unitSN}</span></h3>\n                                        <h3 className=\"font-medium text-blue-600\">UnitID: <span className=\"font-bold text-black\">{v.unitID}</span></h3>\n                                    </div>\n                                </div>\n                                <div>\n                                    <br />\n                                    <h3 className=\"font-medium text-gray-900\">[ <span className=\"font-bold\">{v.latitude} , {v.longitude} </span>]</h3>\n                                    <br />\n                                    <h3 className=\"font-medium text-blue-600\">Last Update: <Moment className=\"font-bold text-black\" fromNow>{v.datetime}</Moment></h3>\n                                    <h3 className=\"font-medium text-blue-600\">Timestamp: <Moment className=\"font-bold text-black\" format=\"DD/MM/YYYY HH:ss\" >{v.datetime}</Moment></h3>\n                                    <h3 className=\"font-medium text-blue-600\">Speed:  <span className=\"text-black\"><strong>{v.speed}</strong> k/h</span></h3>\n                                    <br />\n                                    <h3 className=\"font-medium text-blue-600\">DriverID: <span className=\"font-bold text-black\">{v.driverID}</span></h3>\n                                    <h3 className=\"font-medium text-blue-600\">DriverID Last Update: <span className=\"font-bold text-black\">{v.driverID_lastupdate}</span></h3>\n                                </div>\n                            </div>\n                        </Popup>\n                        <Tooltip offset={[0, -45]} direction={\"top\"} className={classNames(\"realtime-bus-marker-tooltip font-medium transition-opacity duration-500\", {'permanent-tooltip': permanentLabels})} permanent={permanentLabels} sticky={false}>\n                            <h3 className=\"font-medium text-blue-600\">UnitSN: <span className=\"font-bold text-black\">{v.unitSN}</span></h3>\n                            {v.driverID && <h3 className=\"font-medium text-blue-600\">DriverID: <span className=\"font-bold text-black\">{v.driverID}</span></h3> }\n                        </Tooltip>\n                    </Marker>)\n\n            })}\n        </>\n    )\n}\n\nexport default VehicleMarkers;\n\n/*<div\n    className=\"flex items-center w-full bg-gray-100 p-4 rounded-lg transition-all duration-150 hover:scale-110 sm:bg-transparent sm:p-0\">\n    <img src=\"https://pbs.twimg.com/profile_images/1254766882973839360/xP5QuF0U_400x400.jpg\" alt=\"John Doe\"\n         className=\"w-10 h-10 object-cover rounded-full mr-4 border border-solid border-white\">\n        <div><h3 className=\"text-gray-900 font-semibold\">Guseppe Bianchi</h3><h4\n            className=\"text-sm text-gray-700 mt-1\">GSSI</h4></div></div>*/","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/FleetMap.tsx",["106","107","108","109","110"],"import React from 'react';\nimport {Sidebar} from \"../../components/uikit/uikit\";\nimport MapView from \"./MapView\";\n\nimport {GiAerialSignal, IoCloudOfflineSharp} from \"react-icons/all\";\nimport {VscListFilter } from \"react-icons/all\";\nimport {GiRadarSweep } from \"react-icons/all\";\nimport {UserPositionContextProvider} from \"./context/userPositionContext\";\n\nconst FleetMap = () => {\n    return (\n        <div id=\"FleetMap\" className=\"h-screen w-screen\">\n            {/* <Sidebar {...sidebar_content}/> */}\n            <div className=\"page-wrapper pt-20 h-full w-full\">\n                <UserPositionContextProvider>\n                    <MapView />\n                </UserPositionContextProvider>\n            </div>\n\n        </div>\n    );\n};\n\nexport default FleetMap;",["111","112"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/MapControlsBanner.tsx",["113","114","115","116","117"],"import React, {useContext} from 'react';\nimport {\n    FaCrosshairs,\n    FaLocationArrow,\n    FaTag,\n    GrRefresh,\n    IoMdRefresh, IoRefreshSharp,\n    MdAllOut,\n    MdLabel,\n    MdRefresh, VscRefresh\n} from \"react-icons/all\";\nimport {Banner} from \"../../../components/uikit/uikit\";\nimport {UserPositionContext} from \"../context/userPositionContext\";\nimport classNames from \"classnames\";\nimport L, {LatLngTuple} from \"leaflet\";\nimport {VehiclesContext} from \"../context/vehiclesContext\";\n\ninterface MapControlButtonProps {\n    onClickEvent?: (e: React.MouseEvent) => void;\n    active?: boolean;\n    isLoading?: boolean;\n    classname?: string\n}\n\nconst MapControlButton: React.FC<MapControlButtonProps> = ({children, onClickEvent, active, isLoading, classname}) => {\n    //handle click\n    const classlist = classNames(\"w-full sm:w-auto inline-flex cursor-pointer items-center justify-center font-medium leading-none rounded-lg shadow-sm py-3 px-5 border border-transparent transform transition-all duration-150\",\n        {\"group-hover:shadow-lg group-hover:-translate-y-0.5  hover:bg-white hover:text-red-300 active text-white\": active && !isLoading},\n        {\"group-hover:text-blue-300\": !classname},\n        {\" bg-blue-500\": active && !classname},\n        {\"group-hover:shadow-lg group-hover:-translate-y-0.5  bg-white\": !active && !isLoading},\n        {\"bg-white text-blue-300 pointer-events-none\": isLoading})\n    return (\n        <span className=\"group flex mx-3\">\n            <div onClick={onClickEvent} className={classname ? `${classname} ${classlist}` : classlist}>\n                {children}\n            </div>\n        </span>\n    )\n}\n\nconst map_controls = {\n    style: {\n        zIndex: 999,\n        maxWidth: \"70%\"\n    },\n    classname: \"absolute rounded-lg bg-white bg-opacity-50 w-max bottom-6 right-6 bg-blurred shadow-lg border border-gray-200 transition-all duration-500\"\n}\n\nconst MapControlsBanner: React.FC<{map: L.Map, center?: LatLngTuple}> = ({map, center}) => {\n\n    //get Markers context\n    const {\n        vehicles,\n        vehiclesReady,\n        setVehiclesReady,\n        setPermanentLabels,\n        realtimeVehiclesPosition,\n        setRealtimeVehiclesPosition,\n        filterVehicles,\n        permanentLabels,\n    } = useContext(VehiclesContext)\n\n    const { userPosition,\n        setUserPosition,\n        userPositionIsLoading,\n        setUserPositionIsLoading\n    } = useContext(UserPositionContext);\n\n    const centerUserPosition = (e: React.MouseEvent) => {\n        if(map && userPosition){\n            map.flyTo(userPosition, 18)\n        }\n    }\n\n    const fitMap = (e: React.MouseEvent) => {\n        //if userposiiton and markers are not avalable use center value\n        if(map){\n            const bounds = L.latLngBounds([vehicles.map((i: any) => [i.latitude, i.longitude]), userPosition]);\n            //map.fitBounds(bounds, {padding: [150, 50]});\n            map.flyToBounds(bounds, {padding: [150, 50]})\n        }\n    }\n\n    const getUserPosition = (e: React.MouseEvent) => {\n        if(userPosition){\n            map.stopLocate()\n            setUserPosition(null)\n        }else{\n            setUserPositionIsLoading(true)\n            map.locate({\n                watch: true,\n                enableHighAccuracy: true,\n                timeout: 10000\n            })\n        }\n    }\n\n    const handleVehiclesLabels = () => {\n        map.getPanes().mapPane.classList.add(\"prevent-animation\")\n        setPermanentLabels((label: boolean) => {\n            return !label\n        })\n    }\n\n    const handleRealtimeTracking = () => {\n        setRealtimeVehiclesPosition(!realtimeVehiclesPosition)\n    }\n\n    const handleRefreshVehicles = () => {\n        setVehiclesReady(false)\n    }\n\n    return (\n        <Banner {...map_controls}>\n            {(filterVehicles.length > 0 && !realtimeVehiclesPosition && vehiclesReady !== null) && <MapControlButton onClickEvent={handleRefreshVehicles} isLoading={!vehiclesReady}><VscRefresh /></MapControlButton>}\n            {(filterVehicles.length > 0 && vehiclesReady !== null) && <MapControlButton active={realtimeVehiclesPosition} onClickEvent={handleRealtimeTracking} classname=\"map-control-button-live\" isLoading={!vehiclesReady}>LIVE</MapControlButton>}\n            <MapControlButton active={permanentLabels} onClickEvent={handleVehiclesLabels}><FaTag /></MapControlButton>\n            <MapControlButton onClickEvent={fitMap}><MdAllOut /></MapControlButton>\n            <MapControlButton active={userPosition ? true : false} onClickEvent={getUserPosition} isLoading={userPositionIsLoading}><FaLocationArrow /></MapControlButton>\n            {userPosition && <MapControlButton onClickEvent={centerUserPosition}><FaCrosshairs /></MapControlButton>}\n        </Banner>\n    );\n};\n\nexport default MapControlsBanner;","/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/MapView.tsx",["118","119","120","121","122","123"],"import React, {useContext, useState} from 'react';\n\nimport {LayerGroup, MapContainer as LeafletMap, Marker, MarkerProps, TileLayer, useMap, useMapEvents} from \"react-leaflet\";\nimport L, {LatLngTuple} from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport '../../assets/js/SmoothWheelZoom'\n\nimport {UserPositionMarker} from \"./components/UserPositionMarker\";\n\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport blurMap from '../../assets/images/blur_map.jpg'\n\nimport './style/fleetmap.css';\n\n//Components\nimport MapControlsBanner from \"./components/MapControlsBanner\";\nimport VehicleMarkers from \"./components/VehicleMarkers\";\nimport {VehiclesContext} from \"./context/vehiclesContext\";\n\n//Leaflet set Default Icon\nlet defaultIcon = L.icon({\n    iconUrl: icon,\n    shadowUrl: iconShadow,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n});\nL.Marker.prototype.options.icon = defaultIcon;\n\nconst MapView: React.FC = () => {\n    const center: LatLngTuple = [41.9109, 12.4818];\n\n    const {\n        setMap,\n        map\n    } = useContext(VehiclesContext)\n\n    return (\n        <div className=\"map-layer h-full w-full\">\n            <LeafletMap\n                id=\"leaflet-map\"\n                center={center}\n                zoom={13}\n                placeholder={<h1>MAP</h1>}\n                zoomControl={false}\n                whenCreated={setMap}\n                doubleClickZoom={false}\n                closePopupOnClick={true}\n                preferCanvas={true}\n                scrollWheelZoom={false}\n            >\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    detectRetina={true}\n                    keepBuffer={5}\n                    updateWhenIdle={true}\n                />\n\n                <UserPositionMarker />\n                {/*<LayerGroup>\n                    {map && <GTFSStops />}\n                    {map && <GTFSRoute />}\n                </LayerGroup>*/}\n                {/*<LayerGroup>\n                    {map && <Recognizer map={map}/>}\n                </LayerGroup>*/}\n                <LayerGroup>\n                    <VehicleMarkers />\n                </LayerGroup>\n            </LeafletMap>\n            {map && <MapControlsBanner map={map} center={center}/>}\n        </div>\n    );\n};\n\nexport default MapView;",["124","125"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/VehiclesView.tsx",["126","127","128","129","130"],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/UserPositionMarker.tsx",[],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/assets/js/SmoothWheelZoom.js",[],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/GTFSView.tsx",[],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/context/vehiclesContext.tsx",[],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/context/userPositionContext.tsx",[],"/Users/gssi/Bianchi/Development/vehicle-monitoring-system/src/pages/fleetmap/components/VehiclesList.tsx",["131","132","133","134","135","136"],{"ruleId":"137","severity":1,"message":"138","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":12},{"ruleId":"141","severity":1,"message":"142","line":50,"column":36,"nodeType":"143","messageId":"144","endLine":50,"endColumn":38},{"ruleId":"137","severity":1,"message":"145","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"146","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":14},{"ruleId":"137","severity":1,"message":"147","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":11},{"ruleId":"148","severity":1,"message":"149","line":75,"column":33,"nodeType":"150","endLine":75,"endColumn":111},{"ruleId":"148","severity":1,"message":"149","line":92,"column":33,"nodeType":"150","endLine":92,"endColumn":111},{"ruleId":"148","severity":1,"message":"149","line":109,"column":33,"nodeType":"150","endLine":109,"endColumn":111},{"ruleId":"148","severity":1,"message":"149","line":126,"column":33,"nodeType":"150","endLine":126,"endColumn":111},{"ruleId":"148","severity":1,"message":"149","line":143,"column":33,"nodeType":"150","endLine":143,"endColumn":111},{"ruleId":"148","severity":1,"message":"149","line":162,"column":37,"nodeType":"150","endLine":163,"endColumn":144},{"ruleId":"148","severity":1,"message":"149","line":177,"column":37,"nodeType":"150","endLine":178,"endColumn":144},{"ruleId":"148","severity":1,"message":"149","line":243,"column":25,"nodeType":"150","endLine":243,"endColumn":209},{"ruleId":"148","severity":1,"message":"149","line":248,"column":29,"nodeType":"150","endLine":248,"endColumn":87},{"ruleId":"148","severity":1,"message":"149","line":265,"column":25,"nodeType":"150","endLine":265,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":290,"column":25,"nodeType":"150","endLine":291,"endColumn":180},{"ruleId":"148","severity":1,"message":"149","line":294,"column":25,"nodeType":"150","endLine":295,"endColumn":223},{"ruleId":"148","severity":1,"message":"149","line":408,"column":17,"nodeType":"150","endLine":408,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":409,"column":21,"nodeType":"150","endLine":412,"endColumn":23},{"ruleId":"153","severity":1,"message":"154","line":431,"column":21,"nodeType":"150","endLine":432,"endColumn":69},{"ruleId":"153","severity":1,"message":"154","line":466,"column":21,"nodeType":"150","endLine":467,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":466,"column":21,"nodeType":"150","endLine":467,"endColumn":33},{"ruleId":"151","severity":1,"message":"152","line":472,"column":25,"nodeType":"150","endLine":475,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":513,"column":21,"nodeType":"150","endLine":514,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":513,"column":21,"nodeType":"150","endLine":514,"endColumn":33},{"ruleId":"151","severity":1,"message":"152","line":518,"column":21,"nodeType":"150","endLine":521,"endColumn":23},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":82,"column":8,"nodeType":"163","endLine":82,"endColumn":51,"suggestions":"164"},{"ruleId":"137","severity":1,"message":"165","line":2,"column":9,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"166","line":5,"column":9,"nodeType":"139","messageId":"140","endLine":5,"endColumn":23},{"ruleId":"137","severity":1,"message":"167","line":5,"column":25,"nodeType":"139","messageId":"140","endLine":5,"endColumn":44},{"ruleId":"137","severity":1,"message":"168","line":6,"column":9,"nodeType":"139","messageId":"140","endLine":6,"endColumn":22},{"ruleId":"137","severity":1,"message":"169","line":7,"column":9,"nodeType":"139","messageId":"140","endLine":7,"endColumn":21},{"ruleId":"155","replacedBy":"170"},{"ruleId":"157","replacedBy":"171"},{"ruleId":"137","severity":1,"message":"172","line":6,"column":5,"nodeType":"139","messageId":"140","endLine":6,"endColumn":14},{"ruleId":"137","severity":1,"message":"173","line":7,"column":5,"nodeType":"139","messageId":"140","endLine":7,"endColumn":16},{"ruleId":"137","severity":1,"message":"174","line":7,"column":18,"nodeType":"139","messageId":"140","endLine":7,"endColumn":32},{"ruleId":"137","severity":1,"message":"175","line":9,"column":5,"nodeType":"139","messageId":"140","endLine":9,"endColumn":12},{"ruleId":"137","severity":1,"message":"176","line":10,"column":5,"nodeType":"139","messageId":"140","endLine":10,"endColumn":14},{"ruleId":"137","severity":1,"message":"177","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"178","line":3,"column":49,"nodeType":"139","messageId":"140","endLine":3,"endColumn":55},{"ruleId":"137","severity":1,"message":"179","line":3,"column":57,"nodeType":"139","messageId":"140","endLine":3,"endColumn":68},{"ruleId":"137","severity":1,"message":"180","line":3,"column":81,"nodeType":"139","messageId":"140","endLine":3,"endColumn":87},{"ruleId":"137","severity":1,"message":"181","line":3,"column":89,"nodeType":"139","messageId":"140","endLine":3,"endColumn":101},{"ruleId":"137","severity":1,"message":"182","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":15},{"ruleId":"155","replacedBy":"183"},{"ruleId":"157","replacedBy":"184"},{"ruleId":"137","severity":1,"message":"185","line":74,"column":11,"nodeType":"139","messageId":"140","endLine":74,"endColumn":26},{"ruleId":"161","severity":1,"message":"186","line":166,"column":8,"nodeType":"163","endLine":166,"endColumn":23,"suggestions":"187"},{"ruleId":"161","severity":1,"message":"188","line":185,"column":8,"nodeType":"163","endLine":185,"endColumn":34,"suggestions":"189"},{"ruleId":"161","severity":1,"message":"190","line":208,"column":8,"nodeType":"163","endLine":208,"endColumn":24,"suggestions":"191"},{"ruleId":"137","severity":1,"message":"192","line":221,"column":11,"nodeType":"139","messageId":"140","endLine":221,"endColumn":31},{"ruleId":"137","severity":1,"message":"193","line":3,"column":22,"nodeType":"139","messageId":"140","endLine":3,"endColumn":31},{"ruleId":"137","severity":1,"message":"194","line":18,"column":9,"nodeType":"139","messageId":"140","endLine":18,"endColumn":36},{"ruleId":"137","severity":1,"message":"195","line":20,"column":9,"nodeType":"139","messageId":"140","endLine":20,"endColumn":26},{"ruleId":"161","severity":1,"message":"196","line":69,"column":8,"nodeType":"163","endLine":69,"endColumn":10,"suggestions":"197"},{"ruleId":"161","severity":1,"message":"198","line":100,"column":8,"nodeType":"163","endLine":100,"endColumn":23,"suggestions":"199"},{"ruleId":"161","severity":1,"message":"200","line":104,"column":8,"nodeType":"163","endLine":104,"endColumn":34,"suggestions":"201"},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'classNames' is defined but never used.","'Link' is defined but never used.","'css' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-native-reassign",["202"],"no-negated-in-lhs",["203"],["202"],["203"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["204"],"'Sidebar' is defined but never used.","'GiAerialSignal' is defined but never used.","'IoCloudOfflineSharp' is defined but never used.","'VscListFilter' is defined but never used.","'GiRadarSweep' is defined but never used.",["202"],["203"],"'GrRefresh' is defined but never used.","'IoMdRefresh' is defined but never used.","'IoRefreshSharp' is defined but never used.","'MdLabel' is defined but never used.","'MdRefresh' is defined but never used.","'useState' is defined but never used.","'Marker' is defined but never used.","'MarkerProps' is defined but never used.","'useMap' is defined but never used.","'useMapEvents' is defined but never used.","'blurMap' is defined but never used.",["202"],["203"],"'fitMarkersState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFilterObject', 'getVehicles', 'realtimeVehiclesPosition', and 'vehicles.length'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'intervalRealtime', 'setVehiclesReady', and 'vehiclesReady'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has missing dependencies: 'getFilterObject', 'intervalRealtime', 'setRealtimeVehiclesPosition', 'setVehicles', and 'setVehiclesReady'. Either include them or remove the dependency array.",["207"],"'collapseVehiclesList' is assigned a value but never used.","'EmptyCard' is defined but never used.","'setRealtimeVehiclesPosition' is assigned a value but never used.","'setFilterVehicles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data_url' and 'getVehicles'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'data_url', 'filter', 'getVehicles', 'realtimeVehiclesPosition', and 'vehicles.length'. Either include them or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'setVehiclesReady'. Either include it or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [map, permanentLabels, realtimeVehiclesPosition]",{"range":"225","text":"226"},"Update the dependencies array to be: [getFilterObject, getVehicles, realtimeVehiclesPosition, vehicles.length, vehiclesReady]",{"range":"227","text":"228"},"Update the dependencies array to be: [intervalRealtime, realtimeVehiclesPosition, setVehiclesReady, vehiclesReady]",{"range":"229","text":"230"},"Update the dependencies array to be: [filterVehicles, getFilterObject, intervalRealtime, setRealtimeVehiclesPosition, setVehicles, setVehiclesReady]",{"range":"231","text":"232"},"Update the dependencies array to be: [data_url, getVehicles]",{"range":"233","text":"234"},"Update the dependencies array to be: [data_url, filter, getVehicles, realtimeVehiclesPosition, vehicles.length, vehiclesReady]",{"range":"235","text":"236"},"Update the dependencies array to be: [realtimeVehiclesPosition, setVehiclesReady]",{"range":"237","text":"238"},[2872,2915],"[map, permanentLabels, realtimeVehiclesPosition]",[5471,5486],"[getFilterObject, getVehicles, realtimeVehiclesPosition, vehicles.length, vehiclesReady]",[6149,6175],"[intervalRealtime, realtimeVehiclesPosition, setVehiclesReady, vehiclesReady]",[6767,6783],"[filterVehicles, getFilterObject, intervalRealtime, setRealtimeVehiclesPosition, setVehicles, setVehiclesReady]",[2555,2557],"[data_url, getVehicles]",[3454,3469],"[data_url, filter, getVehicles, realtimeVehiclesPosition, vehicles.length, vehiclesReady]",[3532,3558],"[realtimeVehiclesPosition, setVehiclesReady]"]